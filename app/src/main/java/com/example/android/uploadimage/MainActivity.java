package com.example.android.uploadimage;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.OnProgressListener;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

import java.util.HashMap;

public class MainActivity extends AppCompatActivity {
    private static final int REQUEST_CODE_IMAGE = 101;
    private static final String TAG = "MyActivity";
    private ImageView imageViewAdd;
    private EditText inputImageName;
    private Button btnUpload;
    private TextView textViewProgress;
    private ProgressBar progressBar;

    DatabaseReference reference;
    StorageReference storageReference;

    Uri imageUri;
    boolean isImageAdded = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imageViewAdd = findViewById(R.id.imageViewAdd);
        inputImageName = findViewById(R.id.inputImageName);
        btnUpload = findViewById(R.id.btnUpload);
        textViewProgress = findViewById(R.id.textViewProgress);
        progressBar = findViewById(R.id.progressBar);

        // set progessbar visibility gone // initially hide them
        textViewProgress.setVisibility(View.GONE);
        progressBar.setVisibility(View.GONE);

        // creating references in firebase   => car | carimages
        reference = FirebaseDatabase.getInstance().getReference().child("Car");
        storageReference = FirebaseStorage.getInstance().getReference().child("CarImages");


        // select  image from device  |  button
        imageViewAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();                    // this intent will save image in firebase storage
                intent.setType("image/*");
                intent.setAction(Intent.ACTION_GET_CONTENT);
                startActivityForResult(intent, REQUEST_CODE_IMAGE);
            }
        });

         // // Save image button  => save image in firebase
        btnUpload.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final String imageName =  inputImageName.getText().toString(); // this name is given by user in Edit view field
                if (isImageAdded  !=false && imageName!= null) // this wil ensure that the image field and edit text field is not empty then run this statement
                {
                    uploadImage(imageName); // created uoloadImage method and passing variable image name
                }
            }
        });
    }

    private void uploadImage(final String imageName) {  // this imageName is given by the user
        // while uploading the image make progress bar visible
        textViewProgress.setVisibility(View.VISIBLE);
        progressBar.setVisibility(View.VISIBLE);

//        make a unique key for saving every image with different name in firebase
       final  String  key = reference.push().getKey(); // this getKey() is randomly generated by firebase
        Log.d(TAG ,"value of key "+ key);
        // store image in firebase storage with unique_key_name.jpg
        storageReference.child(key+".jpg").putFile(imageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
            @Override
            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                storageReference.child(key +".jpg").getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
                    @Override
                    public void onSuccess(Uri uri) {
                        HashMap hashMap  = new HashMap(); // hash map is used to save image name and image url in  realtime firebase
                        hashMap.put("CarName", imageName);
                        hashMap.put("ImageUrl", uri.toString());

                        // setting hashmap in realtime database reference
                        reference.child(key).setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {
                            @Override
                            public void onSuccess(Void aVoid) {
                                Toast.makeText(MainActivity.this, "Data Successfully Uploaded", Toast.LENGTH_SHORT).show();

                                // redirect on home activity
                                Intent intent = new Intent(MainActivity.this, HomeActivity.class);
                                startActivity(intent);

                                imageViewAdd.setImageResource(R.drawable.ic_image);
                                inputImageName.setText("");                            // making them empty after successfully uploading data

                                progressBar.setVisibility(View.GONE);
                                textViewProgress.setVisibility(View.GONE);         // make them again hide
                            }
                        });
                    }
                }).addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        Log.e(TAG,"error while saving image");
                    }
                });
            }
        }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {
            @Override                             // this on progress listener is used to update progress bar
            public void onProgress(@NonNull UploadTask.TaskSnapshot snapshot) {
                double progress  = (snapshot.getBytesTransferred()*100)/ snapshot.getTotalByteCount(); // dividing into 100 parts i.e 100% progressbar (data transfered) x 100 / (total data size)
                progressBar.setProgress((int)progress);
                textViewProgress.setText(progress + "%");  // showing progress value in progress bar
            }
        });
    }// end of uploadImage() method

    // When we start another activity from current activity to get the result for it,
    // we call the method startActivityForResult(intent, RESPONSE_CODE);.
    // It redirects to another activity like opens camera, gallery, etc.
    // After taking image from gallery or camera then come back to current activity
    // first method that calls is onActivityResult(int requestCode, int resultCode,
    // Intent data). We get the result in this method like taken image from camera or gallery.
    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode== REQUEST_CODE_IMAGE && data!=null)
        {
            imageUri = data.getData();      // finally setting the imageUri value by selecting image from gallery.
            isImageAdded= true;  // this boollean variable is used in upload button to check if it is empty or having data
            imageViewAdd.setImageURI(imageUri);
        }
    }
}